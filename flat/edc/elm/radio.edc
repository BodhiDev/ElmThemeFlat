group { name: "elm/radio/base/default";
   images.image: "radio.png" COMP;
   script {
      BUTTONMODE_SCRIPT
   }
   parts {
      swallow { "elm.swallow.background"; nomouse;
         desc { "default";
            visible: 0;
         }
         desc { "visible"; inherit;
            visible: 1;
         }
      }
      rect { "icon_clip";
         desc { "default";
            color_class: "button_icon";
         }
         desc { "pressed"; inherit;
            color_class: "button_icon_pressed";
         }
         desc { "disabled"; inherit;
            color_class: "button_icon_disabled";
         }
      }
      swallow { "elm.swallow.content"; nomouse;
         clip_to: "icon_clip";
         scale: 1;
         desc { "default";
            fixed: 1 0;
            align: 0.0 0.5;
            rel1.to_x: "base";
            rel2.to_x: "base";
            rel1.offset: 4 4;
            rel1.relative: 1.0 0.0;
            rel2.relative: 0.0 1.0;
            rel2.offset: 4 -5;
            visible: 0;
            offscale;
         }
         desc { "visible"; inherit;
            fixed: 1 0;
            aspect: 1.0 1.0;
            visible: 1;
         }
         desc { "icononly"; inherit;
            fixed: 0 0;
            align: 0.5 0.5;
            rel2.relative: 1.0 1.0;
            rel2.offset: -5 -5;
            rel2.to_x: "";
            visible: 1;
         }
      }
      text { "sizer_content"; nomouse;
         scale: 1;
         desc { "default";
            visible: 0;
            text { font: FN; size: 10;
               min: 0 0;
               text_class: "button_text";
            }
         }
         desc { "visible"; inherit;
            rel.to: "elm.swallow.content";
            text {
               min: 1 1;
               ellipsis: -1;
               text: SPACER_TEXT;
            }
         }
         desc { "icononly"; inherit;
            rel.to: "elm.swallow.content";
            text {
               min: 1 1;
               ellipsis: -1;
               text: SPACER_TEXT;
            }
         }
      }
      part { name: "base"; type: RECT;
         description { state: "default";
            fixed: 1 0;
            align: 0.0 0.5;
            min: 13 13;
            max: 13 13;
            rel1.offset: 4 4;
            rel2.relative: 0.0 1.0;
            rel2.offset: 4 -5;
            aspect: 1.0 1.0; aspect_preference: VERTICAL;
            offscale;
            visible: 0;
         }
         desc { "pressed"; inherit;
         }
         desc { "disabled"; inherit;
         }
      }
      part { name: "ck_check";
         description { state: "default" 0.0;
            fixed: 0 0;
            rel.to: "base";
            image.normal: "radio.png";
            min: 13 13;
            max: 13 13;
            color: 0 0 0 64;
         }
         description { state: "pressed" 0.0;
            inherit: "default" 0.0;
            color: 255 255 255 255;
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
            color: 160 160 160 255;
         }
         desc { "disabled"; inherit;
            color: 0 0 0 16;
         }
      }
      text { "elm.text"; nomouse;
         scale: 1;
         desc { "default";
            fixed: 1 1;
            color: 160 160 160 255;
            rel1.offset: 0 4;
            rel1.relative: 1.0 0.0;
            rel1.to_x: "elm.swallow.content";
            rel2.offset: -5 -5;
            text { font: FN; size: 10;
               align: 0.0 0.5;
               min: 0 0;
            }
            visible: 0;
            offscale;
         }
         desc { "visible"; inherit;
            fixed: 0 0;
            rel1.offset: 4 4;
            text.min: 1 1;
            text.ellipsis: -1;
            visible: 1;
         }
         desc { "pressed_visible"; inherit;
            fixed: 0 0;
            color: 255 255 255 255;
            rel1.offset: 4 4;
            text.min: 1 1;
            text.ellipsis: -1;
            visible: 1;
         }
         desc { "textonly"; inherit;
            fixed: 0 0;
            text.min: 1 1;
            text.ellipsis: -1;
            visible: 1;
         }
         desc { "pressed_textonly"; inherit;
            fixed: 0 0;
            color: 255 255 255 255;
            text.min: 1 1;
            text.ellipsis: -1;
            visible: 1;
         }
         desc { "disabled_visible"; inherit;
            fixed: 0 0;
            color: 96 96 96 255;
            rel1.offset: 4 4;
            text.min: 1 1;
            text.ellipsis: -1;
            visible: 1;
         }
         desc { "disabled_textonly"; inherit;
            fixed: 0 0;
            color: 96 96 96 255;
            text.min: 1 1;
            text.ellipsis: -1;
            visible: 1;
         }
      }
      rect { "event";
         ignore_flags: ON_HOLD;
         desc { "default";
            color: 0 0 0 0;
         }
         desc { "disabled"; inherit;
            visible: 0;
         }
      }
   }
   programs {
      program {
         signal: "mouse,clicked,1"; source: "event";
         action: SIGNAL_EMIT "elm,action,radio,toggle" "elm";
      }
      program {
         signal: "elm,state,radio,on"; source: "elm";
         action:  STATE_SET "selected" 0.0;
         target: "ck_check";
      }
      program {
         signal: "elm,state,radio,off"; source: "elm";
         action:  STATE_SET "default" 0.0;
         target: "ck_check";
      }
      program {
         signal: "mouse,down,1"; source: "event";
         action: SIGNAL_EMIT "elm,action,press" "elm";
         after: "button_click_anim";
      }
      program {
         signal: "mouse,down,1"; source: "event";
         action: STATE_SET "pressed" 0.0;
         target: "ck_check";
      }
      program { name: "button_click_anim";
         script { flag_set(PRESSED); }
      }
      program { name: "button_unclick";
         signal: "mouse,up,1"; source: "event";
         action: SIGNAL_EMIT "elm,action,unpress" "elm";
         after: "button_unclick_anim";
      }
      program {
         signal: "mouse,up,1"; source: "event";
         action: STATE_SET "default" 0.0;
         target: "ck_check";
      }
      program { name: "button_unclick_anim";
         script { flag_unset(PRESSED); }
      }
      program { name: "buttonactivate";
         signal: "elm,anim,activate"; source: "elm";
         action: STATE_SET "pressed" 0.0;
         target: "ck_check";
         after: "button_unpressed_anim";
      }
      program { name: "button_unpressed_anim";
         in: 0.5 0.0;
         action: STATE_SET "default" 0.0;
         target: "ck_check";
      }
      program {
         signal: "mouse,clicked,1"; source: "event";
         action: SIGNAL_EMIT "elm,action,click" "elm";
      }
      program { name: "button_text_visible";
         signal: "elm,state,text,visible"; source: "elm";
         script { flag_set(LABEL); }
      }
      program { name: "button_text_hidden";
         signal: "elm,state,text,hidden"; source: "elm";
         script { flag_unset(LABEL); }
      }
      program { name: "button_icon_visible";
         signal: "elm,state,icon,visible"; source: "elm";
         script { flag_set(ICON); }
      }
      program { name: "button_icon_hidden";
         signal: "elm,state,icon,hidden"; source: "elm";
         script { flag_unset(ICON); }
      }
      program { name: "button_background_visible";
         signal: "elm,state,background,visible"; source: "elm";
         script { flag_set(BACKGROUND); }
      }
      program { name: "button_background_hidden";
         signal: "elm,state,background,hidden"; source: "elm";
         script { flag_unset(BACKGROUND); }
      }
      program { name: "button_state_disabled";
         signal: "elm,state,disabled"; source: "elm";
         script { flag_set(DISABLE); }
      }
      program { name: "button_state_enabled";
         signal: "elm,state,enabled"; source: "elm";
         script { flag_unset(DISABLE); }
      }
      program {
         signal: "elm,state,disabled"; source: "elm";
         action:  STATE_SET "disabled" 0.0;
         target: "ck_check";
      }
      program {
         signal: "elm,state,enabled"; source: "elm";
         action:  STATE_SET "default" 0.0;
         target: "ck_check";
      }
   }
}
